@using FinalAssignment.Models
@model FinalAssignment.Models.Appointment

<h2>Create New Appointment</h2>


@using (Html.BeginForm("Edit", "Appointment", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
	@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4 style="color:red">@ViewBag.Title</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.AppointmentID)
    <div class="form-group">
        @Html.LabelFor(model => model.ClientString, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => Model.ClientString, new SelectList(new PracticeContext().Clients.ToList(), null, "DropDownList"), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ClientString, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DoctorString, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => Model.DoctorString, new SelectList(new PracticeContext().Doctors.ToList(), null, "DropDownList"), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DoctorString, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DateAndTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="datetime-local" name="DateAndTime" , value=@ViewBag.oldDate>
            @Html.ValidationMessageFor(model => model.DateAndTime, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.LocationString, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => Model.LocationString, new SelectList(new PracticeContext().Locations.ToList(), null, "DropDownList"), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LocationString, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.AppointmentType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(m => m.AppointmentType, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AppointmentType, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (User.IsInRole("Doctor") || User.IsInRole("Reception") || User.IsInRole("Admin") || true)
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2" for="Name">Select File</label>
            <div class="col-md-10">
                <input type="file" name="postedFile" class="btn btn-default" accept="image/png,image/gif,image.jpeg" />
            </div>
        </div>
    }
    @if (true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.DoctorRating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(m => m.DoctorRating, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DoctorRating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppointmentRating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(m => m.AppointmentRating, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AppointmentRating, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
